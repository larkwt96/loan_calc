{"version":3,"sources":["ui/Header.js","model/Model.js","ui/input/Loan.js","ui/input/Loans.js","ui/input/Input.js","ui/Output.js","ui/Body.js","ui/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","React","Component","Model","_ref","_this","this","loan_amounts","loan_rates","down_payment","minimum_payment","_ref$loan_term","loan_term","Object","classCallCheck","map","v","toCent","Math","max","ceil","amount","arr","reduce","total","val","amounts","arguments","length","undefined","max_ind","i","payment","postMinimum","remainingPayment","_this2","_this$pay_minimum","pay_minimum","slice","make_payment","currentBalance","index","targetLoan","getTargetLoan","newTargetLoan","monthly_payment","months","sum","step","total_principal","floor","unpaidLoans","filter","run_payment_plan","find_payment_plan","_this$run_payment_pla","total_payment","_this$calc_monthly_pa","calc_monthly_payment","total_interest","Loan","_this$props","props","_this$props$loan_amou","loan_amount","_this$props$loan_rate","loan_rate","updateLoanAmount","updateLoanRate","type","placeholder","value","onChange","event","currentTarget","Loans","parseFloat","setLoanRate","parseDollar","setLoanAmount","buildLoan","key","input_Loan","_this$props2","push","_this$props3","clear","_this3","onClick","add","delete","buildLoans","Input","defaultDownPayment","defaultMinimumPayment","defaultLoanTerm","state","parseInt","setState","preventDefault","_this$state","_this$state$down_paym","_this$state$minimum_p","_this$state$loan_term","model","Promise","resolve","then","displayResults","run","_this$state2","_this$state2$down_pay","_this$state2$minimum_","_this$state2$loan_ter","Fragment","input_Loans","_ref2","_ref3","setLoanTerm","_this4","onSubmit","calculate","body","Output","_this$props$results","results","_this$props$results$m","_this$props$results$t","_this$props$results$t2","_this$props$results$t3","formatter","Intl","NumberFormat","style","currency","format","scope","renderBlank","renderResults","clearResults","Body","possibleConstructorReturn","getPrototypeOf","call","input_Input","ui_Output","App","ui_Header","ui_Body","Boolean","window","location","hostname","match","ReactDOM","render","ui_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81229df5.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n          <span className=\"navbar-brand mb-0 h1\">Loan Calculator</span>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;","class Model {\n  constructor({ loan_amounts, loan_rates, down_payment, minimum_payment, loan_term = 120 }) {\n    this.loan_amounts = loan_amounts.map(v => this.toCent(v));\n    // loan_rate is given percent per year, converted to decimal per month\n    this.loan_rates = loan_rates.map(v => v / 100 / 12);\n    //console.log({ this_loan_rates: this.loan_rates, loan_rates })\n    this.down_payment = this.toCent(down_payment);\n    this.minimum_payment = this.toCent(minimum_payment);\n    this.loan_term = Math.max(1, Math.ceil(loan_term));\n  }\n\n  toCent(amount) {\n    return Math.ceil(amount * 100);\n  }\n\n  /**\n   * Returns the sum of the elements in an array.\n   * \n   * @param {Array} arr Array of numbers\n   */\n  sum(arr) {\n    return arr.reduce((total, val) => total + val, 0);\n  }\n\n  /**\n   * Returns the index of the maximum number.\n   * \n   * @param {Array} arr An array of numbers\n   */\n  getTargetLoan(amounts = this.loan_amounts) {\n    let max_ind = -1;\n    for (let i = 0; i < amounts.length; i++) {\n      if (amounts[i] <= 0) {\n        continue; // ignore\n      } else if (max_ind === -1) {\n        max_ind = i; // init\n      } else if (this.loan_rates[i] > this.loan_rates[max_ind]) {\n        max_ind = i; // update\n      }\n    }\n    return max_ind;\n  }\n\n  /**\n   * pay minimum and return remaining payment amount\n   * \n   * @param {Array} amounts Stores remaining loan balance\n   * @param {number} payment Amount of payment, assumes capable of paying minimum payments\n   */\n  pay_minimum(amounts, payment) {\n    for (let i = 0; i < amounts.length; i++) {\n      amounts[i] -= this.minimum_payment;\n      payment -= this.minimum_payment;\n      if (amounts[i] < 0) {\n        payment += -amounts[i];\n        amounts[i] = 0;\n      }\n    }\n    return { postMinimum: amounts, remainingPayment: payment };\n  }\n\n  /**\n   * make payment and apply interest\n   * \n   * @param {Array} amounts Array of loan amounts\n   * @param {number} payment Amount paid\n   */\n  step(amounts, payment) {\n    const { postMinimum, remainingPayment } = this.pay_minimum(amounts.slice(), payment)\n    const postPayment = this.make_payment(postMinimum, remainingPayment);\n    return postPayment.map((currentBalance, index) => {\n      if (currentBalance <= 0) {\n        return currentBalance;\n      } else {\n        return Math.ceil(currentBalance + amounts[index] * this.loan_rates[index])\n      }\n    });\n  }\n\n  /**\n   * Make payment\n   */\n  make_payment(amounts, payment) {\n    let targetLoan = this.getTargetLoan(amounts);\n    if (targetLoan === -1) {\n      targetLoan = 0;\n    }\n    while (targetLoan !== -1 && payment > 0) {\n      amounts[targetLoan] -= payment;\n      payment = 0;\n      const newTargetLoan = this.getTargetLoan(amounts);\n      if (amounts[targetLoan] < 0 && newTargetLoan !== -1) {\n        payment = -amounts[targetLoan];\n        amounts[targetLoan] = 0;\n        targetLoan = newTargetLoan;\n      } else {\n        break;\n      }\n    }\n    return amounts;\n  }\n\n  run_payment_plan(monthly_payment) {\n    let amounts = this.make_payment(this.loan_amounts.slice(), this.down_payment);\n    let months = 0;\n    if (this.sum(amounts) <= 0) {\n      return { amount: this.sum(amounts), months };\n    }\n    for (months = 1; months <= this.loan_term; months++) {\n      amounts = this.step(amounts, monthly_payment);\n      if (this.sum(amounts) <= 0) {\n        break;\n      }\n    }\n    return { amount: this.sum(amounts), months };\n  }\n\n  find_payment_plan() {\n    // mo payment is under\n    const total_principal = this.sum(this.loan_amounts) - this.down_payment;\n    let monthly_payment = Math.floor(total_principal / this.loan_term);\n    // check if minimum payment is solution\n    const unpaidLoans = this.loan_amounts.filter((v) => v > 0);\n    const minimum_payment = this.minimum_payment * unpaidLoans.length;\n    if (monthly_payment < minimum_payment) {\n      monthly_payment = minimum_payment;\n    }\n    if (this.run_payment_plan(monthly_payment).amount <= 0) {\n      return monthly_payment;\n    }\n    let step = 1e5;\n    while (step > 1e-1) {\n      while (this.run_payment_plan(monthly_payment + step).amount > 0) {\n        // adjust monthly payment if not high enough\n        monthly_payment += step;\n      }\n      // adjust step size by factor of 10 (log)\n      step = step / 10;\n    }\n    step *= 10;\n    return Math.floor(monthly_payment + step);\n  }\n\n  calc_monthly_payment() {\n    const monthly_payment = this.find_payment_plan();\n    const { amount, months } = this.run_payment_plan(monthly_payment);\n    const total_payment = months * monthly_payment + amount;\n    return { monthly_payment: monthly_payment / 100, total_payment: total_payment / 100 };\n  }\n\n  run() {\n    const total_principal = (this.sum(this.loan_amounts) - this.down_payment) / 100;\n    let { monthly_payment, total_payment } = this.calc_monthly_payment();\n    const total_interest = total_payment - total_principal;\n    if (monthly_payment > total_payment) {\n      monthly_payment = total_payment;\n    }\n    const results = {\n      monthly_payment,\n      total_principal,\n      total_interest,\n      total_payment,\n    };\n    return results;\n  }\n}\n\nexport default Model;","import React from 'react';\n\nclass Loan extends React.Component {\n  render() {\n    const { loan_amount = \"\", loan_rate = \"\", updateLoanAmount, updateLoanRate } = this.props;\n    return (\n      <div className=\"form-group row\">\n        <div className=\"input-group col col-12 col-md-6\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">$</span>\n          </div>\n          <input type=\"number\" step=\".01\" className=\"form-control\"\n            placeholder=\"0\" value={loan_amount}\n            onChange={(event) => updateLoanAmount(event.currentTarget.value)} />\n        </div>\n        <div className=\"input-group col col-12 col-md-6\">\n          <input type=\"number\" step=\".01\" className=\"form-control\"\n            placeholder=\"0\" value={loan_rate}\n            onChange={(event) => updateLoanRate(event.currentTarget.value)} />\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\">%</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loan;","import React from 'react';\nimport Loan from './Loan';\n\nclass Loans extends React.Component {\n  updateLoanRate(index, loan_rate) {\n    if (loan_rate === \"\") {\n      loan_rate = undefined;\n    } else {\n      loan_rate = parseFloat(loan_rate);\n    }\n    this.props.loan_rates[index] = loan_rate;\n    this.props.setLoanRate(this.props.loan_rates);\n  }\n\n  updateLoanAmount(index, loan_amount) {\n    if (loan_amount === \"\") {\n      loan_amount = undefined;\n    } else {\n      loan_amount = this.props.parseDollar(loan_amount);\n    }\n    this.props.loan_amounts[index] = loan_amount;\n    this.props.setLoanAmount(this.props.loan_amounts);\n  }\n\n  buildLoans() {\n    const { loan_amounts, loan_rates } = this.props;\n    return loan_amounts.map((amount, index) => this.buildLoan(amount, loan_rates[index], index));\n  }\n\n  buildLoan(loan_amount, loan_rate, index) {\n    return (\n      <li className=\"list-group-item\" key={index}>\n        <Loan\n          loan_amount={loan_amount}\n          loan_rate={loan_rate}\n          updateLoanAmount={loan_amount => this.updateLoanAmount(index, loan_amount)}\n          updateLoanRate={loan_rate => this.updateLoanRate(index, loan_rate)} />\n      </li >\n    );\n  }\n\n  add() {\n    const { loan_amounts, loan_rates } = this.props;\n    loan_amounts.push(undefined);\n    loan_rates.push(undefined);\n    this.props.setLoanAmount(loan_amounts);\n    this.props.setLoanRate(loan_rates);\n  }\n\n  delete() {\n    const { loan_amounts, loan_rates } = this.props;\n    if (loan_amounts.length === 1) {\n      return this.clear();\n    }\n    this.props.setLoanAmount(loan_amounts.slice(0, -1));\n    this.props.setLoanRate(loan_rates.slice(0, -1));\n  }\n\n  clear() {\n    this.props.setLoanAmount([undefined]);\n    this.props.setLoanRate([undefined]);\n  }\n\n  render() {\n    return (\n      <ul className=\"list-group mb-3\">\n        <li className=\"list-group-item\">\n          <div className=\"row text-center mb-3\">\n            <h5 className=\"col\">\n              Loan Balance and Interest Rate\n            </h5>\n          </div>\n          <div className=\"row\">\n            <button type=\"button\" className=\"col btn btn-outline-dark\" onClick={() => this.add()}>Add</button>\n            <button type=\"button\" className=\"col btn btn-outline-dark\" onClick={() => this.delete()}>Delete</button>\n            <button type=\"button\" className=\"col btn btn-outline-dark\" onClick={() => this.clear()}>Clear</button>\n          </div>\n        </li>\n        {this.buildLoans()}\n      </ul>\n    );\n  }\n}\n\nexport default Loans;","import React from 'react';\nimport Model from '../../model/Model';\nimport Loans from './Loans';\n\nclass Input extends React.Component {\n  defaultDownPayment = 0;\n  defaultMinimumPayment = 50;\n  defaultLoanTerm = 120;\n  state = {\n    loan_amounts: [undefined],\n    loan_rates: [undefined],\n    down_payment: undefined,\n    minimum_payment: undefined,\n    loan_term: undefined,\n  };\n\n  parseDollar(amount) {\n    if (amount === \"\") {\n      return undefined;\n    } else {\n      return Math.floor(parseFloat(amount) * 100) / 100;\n    }\n  }\n\n  setLoanTerm(value) {\n    if (value === \"\") {\n      value = undefined;\n    } else {\n      value = parseInt(value);\n    }\n    this.setState({ loan_term: value });\n  }\n\n  calculate(event) {\n    event.preventDefault();\n    const { loan_amounts, loan_rates,\n      down_payment = this.defaultDownPayment,\n      minimum_payment = this.defaultMinimumPayment,\n      loan_term = this.defaultLoanTerm } = this.state;\n    const model = new Model({\n      loan_amounts: loan_amounts.map((e = 0) => e),\n      loan_rates: loan_rates.map((e = 0) => e),\n      down_payment, minimum_payment, loan_term\n    });\n    Promise.resolve().then(() => {\n      this.props.displayResults(model.run());\n    });\n  }\n\n  body() {\n    const { loan_amounts, loan_rates,\n      down_payment = \"\",\n      minimum_payment = \"\",\n      loan_term = \"\" } = this.state;\n    return (\n      <React.Fragment>\n        <Loans\n          loan_amounts={loan_amounts}\n          loan_rates={loan_rates}\n          parseDollar={this.parseDollar}\n          setLoanRate={(loan_rates) => this.setState({ loan_rates })}\n          setLoanAmount={(loan_amounts) => this.setState({ loan_amounts })} />\n        <div className=\"form-group\">\n          <label>Down Payment</label>\n          <div className=\"input-group mb-3 col-xl-8 col-lg-10\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">$</span>\n            </div>\n            <input type=\"number\" step=\".01\" className=\"form-control\"\n              placeholder={this.defaultDownPayment} value={down_payment}\n              onChange={({ currentTarget: { value } }) => this.setState({ down_payment: this.parseDollar(value) })} />\n          </div>\n          {/*<small className=\"form-text text-muted\">Amount payed upfront (in dollars).</small>*/}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Minimum Monthly Payment</label>\n          <div className=\"input-group mb-3 col-xl-8 col-lg-10\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">$</span>\n            </div>\n            <input type=\"number\" step=\".01\" className=\"form-control\"\n              placeholder={this.defaultMinimumPayment} value={minimum_payment}\n              onChange={({ currentTarget: { value } }) => this.setState({ minimum_payment: this.parseDollar(value) })} />\n          </div>\n          {/*<small className=\"form-text text-muted\">Minimum monthly payments (in dollars).</small>*/}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Loan Term (Months)</label>\n          <div className=\"input-group mb-3 col-xl-8 col-lg-10\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">$</span>\n            </div>\n            <input type=\"number\" step=\"1\" className=\"form-control\"\n              placeholder={this.defaultLoanTerm} value={loan_term}\n              onChange={({ currentTarget: { value } }) => this.setLoanTerm(value)} />\n          </div>\n          {/*<small className=\"form-text text-muted\">Minimum monthly payments (in dollars).</small>*/}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <form onSubmit={(event) => this.calculate(event)}>\n        <div className=\"card-header\">\n          <h3>Inputs</h3>\n        </div>\n        <div className=\"card-body text-left\">\n          {this.body()}\n        </div>\n        <div className=\"card-footer\">\n          <button type=\"submit\" className=\"btn btn-outline-primary\">Calculate</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Input;","import React from 'react';\n\nclass Output extends React.Component {\n  renderResults() {\n    const {\n      monthly_payment = 0,\n      total_principal = 0,\n      total_interest = 0,\n      total_payment = 0,\n    } = this.props.results;\n    const valueClass = \"h7\";\n    const formatter = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' });\n    return (\n      <React.Fragment>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">\n                <p className=\"h4\">Total Payment</p>\n                <p className={valueClass}>{formatter.format(total_payment)}</p>\n              </li>\n              <li className=\"list-group-item\">\n                <p className=\"h4\">Monthly Payment</p>\n                <p className={valueClass}>{formatter.format(monthly_payment)}</p>\n              </li>\n            </ul>\n          </li>\n          <li className=\"list-group-item\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Total Principal</th>\n                  <th scope=\"col\">Total Interest</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <p className={valueClass}>\n                      {formatter.format(total_principal)}\n                    </p>\n                  </td>\n                  <td>\n                    <p className={valueClass}>\n                      {formatter.format(total_interest)}\n                    </p>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            {/*<ProgressBar now={total_principal} max={total_payment} />;*/}\n          </li>\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  renderBlank() {\n    return (\n      <React.Fragment>\n        Input values and press calculate!\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    let results;\n    if (this.props.results === undefined) {\n      results = this.renderBlank();\n    } else {\n      results = this.renderResults();\n    }\n    return (\n      <React.Fragment>\n        <div className=\"card-header\">\n          <h3>Results</h3>\n        </div>\n        <div className=\"card-body\">\n          {results}\n        </div >\n        <div className=\"card-footer\">\n          <button onClick={() => this.props.clearResults()} className=\"btn btn-outline-primary\">Clear</button>\n        </div>\n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default Output;","import React from 'react';\nimport Input from './input/Input';\nimport Output from './Output';\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: undefined,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"container text-center\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-6\">\n            <div className=\"card\">\n              <Input displayResults={(results) => this.setState({ results })} />\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6\">\n            <div className=\"card\">\n              <Output results={this.state.results} clearResults={() => this.setState({ results: undefined })} />\n            </div>\n          </div>\n        </div >\n      </div >\n    );\n  }\n}\n\nexport default Body;","import React from 'react';\nimport Header from './Header';\nimport Body from './Body';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Body />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}