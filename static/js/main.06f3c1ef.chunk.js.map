{"version":3,"sources":["ui/Header.js","model/Model.js","ui/Input.js","ui/Output.js","ui/Body.js","ui/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","React","Component","Model","_ref","loan_amount","loan_rate","down_payment","minimum_payment","_ref$loan_term","loan_term","Object","classCallCheck","this","Math","ceil","amount","payment","left","monthly_payment","months","step","floor","run_payment_plan","find_payment_plan","_this$run_payment_pla","total_payment","total_principal","_this$calc_monthly_pa","calc_monthly_payment","total_interest","Input","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","undefined","parseFloat","setState","value","parseInt","event","_this2","preventDefault","_this$state","_this$state$loan_amou","_this$state$loan_rate","_this$state$down_paym","_this$state$minimum_p","_this$state$loan_term","model","Promise","resolve","then","displayResults","run","_this3","_this$state2","_this$state2$loan_amo","_this$state2$loan_rat","_this$state2$down_pay","_this$state2$minimum_","_this$state2$loan_ter","Fragment","type","placeholder","onChange","currentTarget","parseDollar","updateRate","_ref2","_ref3","_ref4","setLoanTerm","_this4","onSubmit","calculate","body","Output","_this$props$results","results","_this$props$results$m","_this$props$results$t","_this$props$results$t2","_this$props$results$t3","formatter","Intl","NumberFormat","style","currency","format","scope","renderBlank","renderResults","onClick","clearResults","Body","ui_Input","ui_Output","App","ui_Header","ui_Body","Boolean","window","location","hostname","match","ReactDOM","render","ui_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06f3c1ef.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n          <span className=\"navbar-brand mb-0 h1\">Loan Calculator</span>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;","class Model {\n  constructor({ loan_amount, loan_rate, down_payment, minimum_payment, loan_term = 120 }) {\n    this.loan_amount = Math.ceil(loan_amount * 100);\n    this.loan_rate = loan_rate / 100 / 12;  // loan_rate is given as percent, converted to decimal per month\n    this.down_payment = Math.ceil(down_payment * 100);\n    this.minimum_payment = Math.ceil(minimum_payment * 100);\n    this.loan_term = Math.ceil(loan_term);\n  }\n\n  /**\n   * Assume amount and payment are in cents.\n   */\n  step(amount, payment) {\n    const left = amount - payment;\n    if (left <= 0) { // if payed off\n      return left;\n    } else {\n      return Math.ceil(left + amount * this.loan_rate); // add interest\n    }\n  }\n\n  run_payment_plan(monthly_payment) {\n    let amount = this.loan_amount - this.down_payment;\n    let months = 0;\n    if (amount <= 0) {\n      return { amount, months };\n    }\n    for (months = 1; months <= this.loan_term; months++) {\n      amount = this.step(amount, monthly_payment);\n      if (amount <= 0) {\n        break;\n      }\n    }\n    return { amount, months };\n  }\n\n  find_payment_plan() {\n    // mo payment is under\n    let monthly_payment = Math.floor((this.loan_amount - this.down_payment) / this.loan_term);\n    if (monthly_payment < this.minimum_payment) {\n      monthly_payment = this.minimum_payment;\n    }\n    if (this.run_payment_plan(monthly_payment).amount <= 0) {\n      return monthly_payment;\n    }\n    let step = 1e5;\n    while (step > 1e-1) {\n      while (this.run_payment_plan(monthly_payment + step).amount > 0) {\n        // adjust monthly payment if not high enough\n        monthly_payment += step;\n      }\n      // adjust step size by factor of 10 (log)\n      step = step / 10;\n    }\n    step *= 10;\n    return Math.floor(monthly_payment + step);\n  }\n\n  calc_monthly_payment() {\n    const monthly_payment = this.find_payment_plan();\n    const { amount, months } = this.run_payment_plan(monthly_payment);\n    const total_payment = months * monthly_payment + amount;\n    return { monthly_payment: monthly_payment / 100, total_payment: total_payment / 100 };\n  }\n\n  run() {\n    const total_principal = (this.loan_amount - this.down_payment) / 100;\n    let { monthly_payment, total_payment } = this.calc_monthly_payment();\n    const total_interest = total_payment - total_principal;\n    if (monthly_payment > total_payment) {\n      monthly_payment = total_payment;\n    }\n    return {\n      monthly_payment,\n      total_principal,\n      total_interest,\n      total_payment,\n    };\n  }\n}\n\nexport default Model;","import React from 'react';\nimport Model from '../model/Model'\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loan_amount: undefined,\n      loan_rate: undefined,\n      down_payment: undefined,\n      minimum_payment: undefined,\n      loan_term: undefined,\n    };\n  }\n\n  parseDollar(amount) {\n    if (amount === \"\") {\n      return undefined;\n    } else {\n      return Math.floor(parseFloat(amount) * 100) / 100;\n    }\n  }\n\n  updateRate(loan_rate) {\n    if (loan_rate === \"\") {\n      loan_rate = undefined;\n    } else {\n      loan_rate = parseFloat(loan_rate);\n    }\n    this.setState({ loan_rate });\n  }\n\n  setLoanTerm(value) {\n    if (value === \"\") {\n      value = undefined;\n    } else {\n      value = parseInt(value);\n    }\n    this.setState({ loan_term: value });\n  }\n\n  calculate(event) {\n    event.preventDefault();\n    const { loan_amount = 0, loan_rate = 0, down_payment = 0, minimum_payment = 50, loan_term = 120 } = this.state;\n    const model = new Model({ loan_amount, loan_rate, down_payment, minimum_payment, loan_term });\n    Promise.resolve().then(() => {\n      this.props.displayResults(model.run());\n    });\n  }\n\n  body() {\n    const { loan_amount = \"\",\n      loan_rate = \"\",\n      down_payment = \"\",\n      minimum_payment = \"\",\n      loan_term = \"\" } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"form-group\">\n          <label>Loan Balance</label>\n          <div className=\"input-group mb-3 col-xl-8 col-lg-10\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">$</span>\n            </div>\n            <input type=\"number\" step=\".01\" className=\"form-control\"\n              placeholder=\"0\" value={loan_amount}\n              onChange={({ currentTarget: { value } }) => this.setState({ loan_amount: this.parseDollar(value) })} />\n          </div>\n          {/*<small className=\"form-text text-muted\">Input loan amount (in dollars).</small>*/}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Loan Interest Rate (%)</label>\n          <div className=\"input-group mb-3 col-xl-8 col-lg-10\">\n            <input type=\"number\" step=\".01\" className=\"form-control\"\n              placeholder=\"0\" value={loan_rate}\n              onChange={(event) => this.updateRate(event.currentTarget.value)} />\n            <div className=\"input-group-append\">\n              <span className=\"input-group-text\">%</span>\n            </div>\n          </div>\n          {/*<small className=\"form-text text-muted\">Input loan rate (in percentage).</small>*/}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Down Payment</label>\n          <div className=\"input-group mb-3 col-xl-8 col-lg-10\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">$</span>\n            </div>\n            <input type=\"number\" step=\".01\" className=\"form-control\"\n              placeholder=\"0\" value={down_payment}\n              onChange={({ currentTarget: { value } }) => this.setState({ down_payment: this.parseDollar(value) })} />\n          </div>\n          {/*<small className=\"form-text text-muted\">Amount payed upfront (in dollars).</small>*/}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Minimum Monthly Payment</label>\n          <div className=\"input-group mb-3 col-xl-8 col-lg-10\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">$</span>\n            </div>\n            <input type=\"number\" step=\".01\" className=\"form-control\"\n              placeholder=\"50\" value={minimum_payment}\n              onChange={({ currentTarget: { value } }) => this.setState({ minimum_payment: this.parseDollar(value) })} />\n          </div>\n          {/*<small className=\"form-text text-muted\">Minimum monthly payments (in dollars).</small>*/}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Loan Term (Months)</label>\n          <div className=\"input-group mb-3 col-xl-8 col-lg-10\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">$</span>\n            </div>\n            <input type=\"number\" step=\"1\" className=\"form-control\"\n              placeholder=\"120\" value={loan_term}\n              onChange={({ currentTarget: { value } }) => this.setLoanTerm(value)} />\n          </div>\n          {/*<small className=\"form-text text-muted\">Minimum monthly payments (in dollars).</small>*/}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <form onSubmit={(event) => this.calculate(event)}>\n        <div className=\"card-header\">\n          <h3>Inputs</h3>\n        </div>\n        <div className=\"card-body text-left\">\n          {this.body()}\n        </div>\n        <div className=\"card-footer\">\n          <button type=\"submit\" className=\"btn btn-outline-primary\">Calculate</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Input;","import React from 'react';\n\nclass Output extends React.Component {\n  renderResults() {\n    const {\n      monthly_payment = 0,\n      total_principal = 0,\n      total_interest = 0,\n      total_payment = 0,\n    } = this.props.results;\n    const valueClass = \"h7\";\n    const formatter = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' });\n    return (\n      <React.Fragment>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">\n                <p className=\"h4\">Total Payment</p>\n                <p className={valueClass}>{formatter.format(total_payment)}</p>\n              </li>\n              <li className=\"list-group-item\">\n                <p className=\"h4\">Monthly Payment</p>\n                <p className={valueClass}>{formatter.format(monthly_payment)}</p>\n              </li>\n            </ul>\n          </li>\n          <li className=\"list-group-item\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Total Principal</th>\n                  <th scope=\"col\">Total Interest</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <p className={valueClass}>\n                      {formatter.format(total_principal)}\n                    </p>\n                  </td>\n                  <td>\n                    <p className={valueClass}>\n                      {formatter.format(total_interest)}\n                    </p>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            {/*<ProgressBar now={total_principal} max={total_payment} />;*/}\n          </li>\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  renderBlank() {\n    return (\n      <React.Fragment>\n        Input values and press calculate!\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    let results;\n    if (this.props.results === undefined) {\n      results = this.renderBlank();\n    } else {\n      results = this.renderResults();\n    }\n    return (\n      <React.Fragment>\n        <div className=\"card-header\">\n          <h3>Results</h3>\n        </div>\n        <div className=\"card-body\">\n          {results}\n        </div >\n        <div className=\"card-footer\">\n          <button onClick={() => this.props.clearResults()} className=\"btn btn-outline-primary\">Clear</button>\n        </div>\n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default Output;","import React from 'react';\nimport Input from './Input';\nimport Output from './Output';\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: undefined,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 text-center\">\n            <div className=\"row\">\n              <div className=\"col-md-6 col-sm-12\">\n                <div className=\"card\">\n                  <Input displayResults={(results) => this.setState({ results })} />\n                </div>\n              </div>\n              <div className=\"col-md-6 col-sm-12\">\n                <div className=\"card\">\n                  <Output results={this.state.results} clearResults={() => this.setState({ results: undefined })} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div >\n      </div >\n    );\n  }\n}\n\nexport default Body;","import React from 'react';\nimport Header from './Header';\nimport Body from './Body';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Body />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}